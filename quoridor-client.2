#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 5863 0 28 3 12 #"#lang racket"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 24 #"test-engine/racket-tests"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 13 #"racket/struct"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 9 #"lang/posn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 261
(5
 #"; \xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2"
 #"\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84 "
 #" \xE2\x96\x84         \xE2\x96\x84  \xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2"
 #"\x96\x84\xE2\x96\x84\xE2\x96\x84  \xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2"
 #"\x96\x84\xE2\x96\x84\xE2\x96\x84  \xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2"
 #"\x96\x84\xE2\x96\x84\xE2\x96\x84  \xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2"
 #"\x96\x84\xE2\x96\x84   \xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2"
 #"\x96\x84\xE2\x96\x84  \xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2"
 #"\x96\x84\xE2\x96\x84 "
) 0 0 24 29 1 #"\n"
0 0 17 3 297
(6
 #";\xE2\x96\x90\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96"
 #"\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2"
 #"\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2"
 #"\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x91"
 #"\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96"
 #"\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2"
 #"\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91"
 #"\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96"
 #"\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2"
 #"\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91"
 #"\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x91\xE2\x96"
 #"\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2"
 #"\x96\x91\xE2\x96\x91\xE2\x96\x8C \xE2\x96\x90\xE2\x96\x91\xE2\x96\x91"
 #"\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96"
 #"\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2"
 #"\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91"
 #"\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96"
 #"\x8C"
) 0 0 24 29 1 #"\n"
0 0 17 3 295
(7
 #";\xE2\x96\x90\xE2\x96\x91\xE2\x96\x88\xE2\x96\x80\xE2\x96\x80\xE2\x96"
 #"\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x88\xE2"
 #"\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2"
 #"\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x88"
 #"\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96"
 #"\x80\xE2\x96\x80\xE2\x96\x88\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2"
 #"\x96\x91\xE2\x96\x88\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80"
 #"\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x88\xE2\x96\x91\xE2\x96"
 #"\x8C \xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x88\xE2"
 #"\x96\x91\xE2\x96\x88\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80 "
 #"\xE2\x96\x90\xE2\x96\x91\xE2\x96\x88\xE2\x96\x80\xE2\x96\x80\xE2\x96"
 #"\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x88\xE2"
 #"\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x88\xE2\x96\x80"
 #"\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96"
 #"\x80\xE2\x96\x88\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2"
 #"\x96\x88\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80"
 #"\xE2\x96\x80\xE2\x96\x80\xE2\x96\x88\xE2\x96\x91\xE2\x96\x8C"
) 0 0 24 29 1 #"\n"
0 0 17 3 195
(8
 #";\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2\x96\x90\xE2\x96\x91"
 #"\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2\x96\x90"
 #"\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       "
 #"\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96"
 #"\x8C       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C     \xE2\x96\x90\xE2"
 #"\x96\x91\xE2\x96\x8C     \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       "
 #"\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96"
 #"\x8C       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96"
 #"\x91\xE2\x96\x8C       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C"
) 0 0 24 29 1 #"\n"
0 0 17 3 223
(9
 #";\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2\x96\x90\xE2\x96\x91"
 #"\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2\x96\x90"
 #"\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       "
 #"\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96"
 #"\x88\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2"
 #"\x96\x84\xE2\x96\x84\xE2\x96\x88\xE2\x96\x91\xE2\x96\x8C     \xE2\x96"
 #"\x90\xE2\x96\x91\xE2\x96\x8C     \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C"
 #"       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91"
 #"\xE2\x96\x8C       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90"
 #"\xE2\x96\x91\xE2\x96\x88\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x88\xE2\x96\x91\xE2"
 #"\x96\x8C"
) 0 0 24 29 1 #"\n"
0 0 17 3 223
(10
 #";\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2\x96\x90\xE2\x96\x91"
 #"\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2\x96\x90"
 #"\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       "
 #"\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96"
 #"\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2"
 #"\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x8C     \xE2\x96"
 #"\x90\xE2\x96\x91\xE2\x96\x8C     \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C"
 #"       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91"
 #"\xE2\x96\x8C       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90"
 #"\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96"
 #"\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2"
 #"\x96\x8C"
) 0 0 24 29 1 #"\n"
0 0 17 3 233
(11
 #";\xE2\x96\x90\xE2\x96\x91\xE2\x96\x88\xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x88\xE2"
 #"\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2"
 #"\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C "
 #"      \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91"
 #"\xE2\x96\x88\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96"
 #"\x88\xE2\x96\x91\xE2\x96\x88\xE2\x96\x80\xE2\x96\x80      \xE2\x96"
 #"\x90\xE2\x96\x91\xE2\x96\x8C     \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C"
 #"       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91"
 #"\xE2\x96\x8C       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90"
 #"\xE2\x96\x91\xE2\x96\x88\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96"
 #"\x80\xE2\x96\x88\xE2\x96\x91\xE2\x96\x88\xE2\x96\x80\xE2\x96\x80 "
) 0 0 24 29 1 #"\n"
0 0 17 3 209
(12
 #";\xE2\x96\x90\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96"
 #"\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2"
 #"\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2"
 #"\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C "
 #"      \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91"
 #"\xE2\x96\x8C     \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2\x96"
 #"\x90\xE2\x96\x91\xE2\x96\x8C     \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C"
 #"       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91"
 #"\xE2\x96\x8C       \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90"
 #"\xE2\x96\x91\xE2\x96\x8C     \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C  "
) 0 0 24 29 1 #"\n"
0 0 17 3 277
(13
 #"; \xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2"
 #"\x96\x80\xE2\x96\x88\xE2\x96\x91\xE2\x96\x88\xE2\x96\x80\xE2\x96\x80 "
 #"\xE2\x96\x90\xE2\x96\x91\xE2\x96\x88\xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x88\xE2"
 #"\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x88\xE2\x96\x84"
 #"\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x88\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2"
 #"\x96\x8C      \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C  \xE2\x96\x84\xE2"
 #"\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x88\xE2\x96\x91\xE2\x96\x88"
 #"\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84 \xE2\x96\x90\xE2\x96"
 #"\x91\xE2\x96\x88\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2"
 #"\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x88\xE2\x96\x91\xE2\x96\x8C"
 #"\xE2\x96\x90\xE2\x96\x91\xE2\x96\x88\xE2\x96\x84\xE2\x96\x84\xE2\x96"
 #"\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x84\xE2\x96\x88\xE2"
 #"\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C      \xE2"
 #"\x96\x90\xE2\x96\x91\xE2\x96\x8C "
) 0 0 24 29 1 #"\n"
0 0 17 3 263
(14
 #";        \xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C  \xE2\x96\x90\xE2\x96"
 #"\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2"
 #"\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x8C"
 #"\xE2\x96\x90\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96"
 #"\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2"
 #"\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2"
 #"\x96\x90\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x91"
 #"\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96"
 #"\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x8C\xE2\x96\x90\xE2"
 #"\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91"
 #"\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x8C \xE2\x96"
 #"\x90\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2"
 #"\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91\xE2\x96\x91"
 #"\xE2\x96\x8C\xE2\x96\x90\xE2\x96\x91\xE2\x96\x8C       \xE2\x96\x90"
 #"\xE2\x96\x91\xE2\x96\x8C"
) 0 0 24 29 1 #"\n"
0 0 17 3 223
(15
 #";         \xE2\x96\x80    \xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2"
 #"\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80"
 #"\xE2\x96\x80\xE2\x96\x80  \xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2"
 #"\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80"
 #"\xE2\x96\x80\xE2\x96\x80  \xE2\x96\x80         \xE2\x96\x80  \xE2\x96"
 #"\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2"
 #"\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80  \xE2\x96"
 #"\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2"
 #"\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80   \xE2\x96\x80\xE2\x96"
 #"\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2"
 #"\x96\x80\xE2\x96\x80\xE2\x96\x80\xE2\x96\x80  \xE2\x96\x80         "
 #"\xE2\x96\x80 "
) 0 0 24 29 1 #"\n"
0 0 24 3 104
(16
 #"                                                                     "
 #"                                   "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(17
 #";; Banner/Electronic: https://www.coolgenerator.com/ascii-text-genera"
 #"tor"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 82
(18
 #";  #####  ####### ######  #     #  #####  ####### #     # ######  ###"
 #"####  #####  "
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(19
 #";  #     #    #    #     # #     # #     #    #    #     # #     # # "
 #"      #     # "
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(20
 #";  #          #    #     # #     # #          #    #     # #     # # "
 #"      #       "
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(21
 #";   #####     #    ######  #     # #          #    #     # ######  ##"
 #"###    #####  "
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(22
 #";        #    #    #   #   #     # #          #    #     # #   #   # "
 #"            # "
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(23
 #";  #     #    #    #    #  #     # #     #    #    #     # #    #  # "
 #"      #     # "
) 0 0 24 29 1 #"\n"
0 0 17 3 146
(24
 #";   #####     #    #     #  #####   #####     #     #####  #     # ##"
 #"#####  #####                                                         "
 #"        "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #" ["
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 1 #" "
0 0 14 3 14 #"current-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"gamestate"
0 0 24 3 1 #" "
0 0 14 3 7 #"special"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 23 3 9 #"#:methods"
0 0 24 3 1 #" "
0 0 14 3 16 #"gen:custom-write"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"write-proc"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 30 #"make-constructor-style-printer"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"#:players\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"#:walls\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"#:current-player\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 17 #"ws-current-player"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"#:gamestate\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"#:special\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"ws-special"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 7 #")))))])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; A ws is a strucutre"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; (make-ws (list player ...) (list wall ...) id gamestate special)"
0 0 24 29 1 #"\n"
0 0 17 3 80
(25
 #"; interpretation players on the board, with walls and the current act"
 #"ive player."
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(26
 #"; when there are no walls on the board, the list of walls can be empt"
 #"y."
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#"; the list of players has as many entries as there are players."
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; A gamestate is used to navigate menus, etc."
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; a special is used to show hovering objects or messages"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #" ["
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 11 #"orientation"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 23 3 9 #"#:methods"
0 0 24 3 1 #" "
0 0 14 3 16 #"gen:custom-write"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"write-proc"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 30 #"make-constructor-style-printer"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wall"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 3 #") ("
0 0 14 3 16 #"wall-orientation"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 7 #")))))])"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; A wall is a structure"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; (make-wall cell orientation)"
0 0 24 29 1 #"\n"
0 0 17 3 76
(27
 #"; Interpretation a wall with the orientation horizontal or vertical t"
 #"hat has"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(28
 #"; it's north-western corner at the north-western corner of the game-f"
 #"ield cell."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ["
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 15 #"remaining-walls"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 23 3 9 #"#:methods"
0 0 24 3 1 #" "
0 0 14 3 16 #"gen:custom-write"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"write-proc"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 30 #"make-constructor-style-printer"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 6 #"player"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"#:id\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"player-id"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"#:cell\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"player-cell"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"#:remaining-walls\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 22 #"player-remaining-walls"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 7 #")))))])"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; A player is a structure"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; (make-player ID cell number)"
0 0 24 29 1 #"\n"
0 0 17 3 72
(29
 #"; Interpretation a player has an unique id from 1 to 4, a current fie"
 #"ld,"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#"; that the player occupies. remaining-walls is a positve number"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 2 #" ["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 3 1 #" "
0 0 14 3 16 #"gen:custom-write"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"write-proc"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 30 #"make-constructor-style-printer"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 7 #")))))])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; A cell is a structure"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; (make-cell number number)"
0 0 24 29 1 #"\n"
0 0 17 3 74
(30
 #"; Interpretation a cell is a field on the game board, numbered from 0"
 #" to 8"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #"; on the x and y axis."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"special"
0 0 24 3 2 #" ["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #" "
0 0 14 3 9 #"lastframe"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 23 3 9 #"#:methods"
0 0 24 3 1 #" "
0 0 14 3 16 #"gen:custom-write"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"write-proc"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 30 #"make-constructor-style-printer"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 7 #"special"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"#:x\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"special-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"#:y\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"special-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"#:frame\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"special-frame"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"#:lastframe\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"special-frame"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"unquoted-printing-string"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"#:image\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"special-img"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 7 #")))))])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; A special is a structure"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; (make-special number number image number number)"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; Interpretation a sepcial is an image at position x and y and frame"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; An id his one of these numbers:"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; - 1"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; - 2"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; - 3"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; - 4"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; An orientation is one of these strings:"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; - \"horizontal\""
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; - \"vertical\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; A gamestate is one of the following strings:"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; - \"active-game\" ; when the current player is active"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; - \"passive-game\" ; when the player has to wait"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; - \"main-menu\" ; an example of a menu-state"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; An Area is one of the following strings:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; - \"center\" ; the center of a field"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; - \"h-edge\" ; a horizontal edge"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; - \"v-edge\" ; a vertical edge"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; - \"none\" ; a safe zone, where it's neither center, nor edge"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 98
(31
 #";   #####     #    #     # #######     #####  ####### ####### #######"
 #" ### #     #  #####   #####  "
) 0 0 24 29 1 #"\n"
0 0 17 3 97
(32
 #"; #     #   # #   ##   ## #          #     # #          #       #    "
 #" #  ##    # #     # #     # "
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(33
 #";  #        #   #  # # # # #          #       #          #       #   "
 #"  #  # #   # #       #       "
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(34
 #";  #  #### #     # #  #  # #####       #####  #####      #       #   "
 #"  #  #  #  # #  ####  #####  "
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(35
 #";  #     # ####### #     # #                # #          #       #   "
 #"  #  #   # # #     #       # "
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(36
 #";  #     # #     # #     # #          #     # #          #       #   "
 #"  #  #    ## #     # #     # "
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(37
 #";   #####  #     # #     # #######     #####  #######    #       #   "
 #" ### #     #  #####   #####  "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX_WALLS"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";  #     #                                           "
0 0 24 29 1 #"\n"
0 0 17 3 53 #";  #     # ###### #      #####  ###### #####   ####  "
0 0 24 29 1 #"\n"
0 0 17 3 53 #";  #     # #      #      #    # #      #    # #      "
0 0 24 29 1 #"\n"
0 0 17 3 53 #";  ####### #####  #      #    # #####  #    #  ####  "
0 0 24 29 1 #"\n"
0 0 17 3 53 #";  #     # #      #      #####  #      #####       # "
0 0 24 29 1 #"\n"
0 0 17 3 53 #";  #     # #      #      #      #      #   #  #    # "
0 0 24 29 1 #"\n"
0 0 17 3 53 #";  #     # ###### ###### #      ###### #    #  ####  "
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 24 3 30 #"                              "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; Cell -> (Number, Number)"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; given a cell, returns the render position of the"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; north-west corner"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cell->NWCorner"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; Cell -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; given a cell, returns the render position of x-value"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; the north-west corner"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cell->NWCorner-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cell->NWCorner"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; Cell -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; given a cell, returns the render position of y-value"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; the north-west corner"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cell->NWCorner-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cell->NWCorner"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; Number, Number -> Cell"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; convert mouse position to cell"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mouseXY->Cell"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-cell"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; PlayerList cell id -> PlayerList"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; Change the cell of player with certain id"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"changeCell"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"player-id"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 2 #" ("
0 0 14 3 22 #"player-remaining-walls"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 7 #"players"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; PlayerList id -> Cell "
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; returns current Cell of PlayerID given all Players "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"player_pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"player-cell"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"player-id"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 7 #"players"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; Cell-x Cell-y WallList -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; checks if a cell with the given position is a valid destination"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"validCell?"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ["
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; Cell1 Cell2 Wall -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; checks if a Wall is between given Cells"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"wallBetween?"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 7 #"     [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"wall-orientation"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"max"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"max"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 3 #"max"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"wall-orientation"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"max"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"max"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 3 #"max"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; Cell1 Cell2 WallList -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; checks if any Wall is between given Cells"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"wallsBetween?"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 8 #"identity"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"wall"
0 0 24 3 3 #") ("
0 0 14 3 12 #"wallBetween?"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 3 #")) "
0 0 14 3 5 #"walls"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; StartCell GoalCell WallList -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; checks if a cell with the given position is a valid destination"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"walkableCell?"
0 0 24 3 1 #" "
0 0 14 3 9 #"startCell"
0 0 24 3 1 #" "
0 0 14 3 8 #"goalCell"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"validCell?"
0 0 24 3 1 #" "
0 0 14 3 8 #"goalCell"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 15 #"playerPosition?"
0 0 24 3 1 #" "
0 0 14 3 8 #"goalCell"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 13 #"wallsBetween?"
0 0 24 3 1 #" "
0 0 14 3 9 #"startCell"
0 0 24 3 1 #" "
0 0 14 3 8 #"goalCell"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; Cell PlayerList -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; checks if a Player is on the given Cell"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"playerPosition?"
0 0 24 3 1 #" "
0 0 14 3 8 #"goalCell"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 8 #"identity"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cell"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 8 #"goalCell"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"player"
0 0 24 3 2 #")("
0 0 14 3 11 #"player-cell"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #")) "
0 0 14 3 7 #"players"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; PlayerList id WorldState -> CellList"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; calculates possible moves for a given PlayerId"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"possibleCells"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cell"
0 0 24 3 3 #") ("
0 0 14 3 13 #"walkableCell?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"player_pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #") "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 13 #"allNeighbours"
0 0 24 3 2 #" ("
0 0 14 3 10 #"player_pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; PlayerList id -> PlayerList"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; remove a wall from a certain player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"substractWall"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"player-id"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-cell"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 22 #"player-remaining-walls"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 7 #"players"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; WorldState id -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; change the current-player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"changeCurrentPlayer"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-ws"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 2 #"id"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 10 #"ws-special"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; WorldState id -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; change the game-state"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"changeGameState"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 8 #"newstate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-ws"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"ws-current-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 8 #"newstate"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 10 #"ws-special"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; WorldState special -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; change the special"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"changeSpecial"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 7 #"special"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-ws"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"ws-current-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 7 #"special"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; wall wall -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; checks if walls are the same"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"wall=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall1"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell=?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"wall-orientation"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall1"
0 0 24 3 3 #") ("
0 0 14 3 16 #"wall-orientation"
0 0 24 3 1 #" "
0 0 14 3 5 #"wall2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; (list wall ... ) wall -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; returns #t if wall is in list of walls"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"wallInList?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"memf"
0 0 24 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 6 #"wall=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #") "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; cell -> CellList"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; returns all Neighbours of a given Cell"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"allNeighbours"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"N\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"W\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; cell direction -> cell"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; returns the cell in the direction of the origin cell"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; direction is one of S, N, W, E for south, north, etch"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"N\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cell"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"W\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cell"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"NE\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cell"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SW\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cell"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"    )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; walls players id -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; will check if the player can put a wall at the given point"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"wallOK?"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 11 #"orientation"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 29 #"; remaining-walls sufficient?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 22 #"player-remaining-walls"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 9 #"player-id"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))) "
0 0 14 3 7 #"players"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 41 #"; no overlapping walls and board-boarders"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 30 #"; direct copy of existing wall"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"wallInList?"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 11 #"orientation"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 12 #"; horizontal"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 1 #" "
0 0 14 3 11 #"orientation"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 42 #"; not overlapping right side of horz. wall"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"wallInList?"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"W\""
0 0 24 3 2 #") "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 49 #"; not overlapping left side of another horz. wall"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"wallInList?"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 2 #") "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 34 #"; not bridging over a verical wall"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"wallInList?"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"NE\""
0 0 24 3 2 #") "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 61
#"; no horz. walls in the last column, extending over the board"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 35 #"; no horz. walls over the first row"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 35 #"; no horz. walls under the last row"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 2 #") "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       )]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 1 #" "
0 0 14 3 11 #"orientation"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 40 #"; not overlapping top side of vert. wall"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"wallInList?"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #") "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 51 #"; not overlapping bottom side of another vert. wall"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"wallInList?"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"N\""
0 0 24 3 2 #") "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 32 #"; not bridging over a horz. wall"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"wallInList?"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"SW\""
0 0 24 3 2 #") "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 58
#"; no vert. walls in the last row, extending over the board"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 41 #"; no vert. walls left of the first column"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 37 #"; no vert. walls right the last colum"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 3 #")  "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       )]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; WorldState cell orientation id -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 78
(38
 #"; Add a wall from player with id on the board at the north-west corne"
 #"r of cell"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #"; with the given orientation"
0 0 24 29 1 #"\n"
0 0 17 3 75
(39
 #"; will not place wall, if player has no more walls left, or wall is a"
 #"lready"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #"; in place"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"addWall"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 11 #"orientation"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"wallOK?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #") ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 11 #"orientation"
0 0 24 3 2 #"  "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"make-ws"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"substractWall"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 14 3 2 #"id"
0 0 24 3 2 #") "
0 0 17 3 33 #"; update player's remaining walls"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 11 #"orientation"
0 0 24 3 3 #") ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")) "
0 0 17 3 24 #"; add wall to worldstate"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 17 #"ws-current-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 17 3 20 #";keep-current-player"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 17 3 16 #"; keep-gamestate"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"ws-special"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")) "
0 0 17 3 14 #"; keep special"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; cell cell -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; checks if cells are the same"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"cell2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; (list cell ... ) cell -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; returns #t if cell is in list of cells"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cellInList?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 7 #"movcell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"memf"
0 0 24 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 6 #"cell=?"
0 0 24 3 1 #" "
0 0 14 3 7 #"movcell"
0 0 24 3 2 #") "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; Worldstate id cell -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; will check if the cell is okay to move the player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"moveOK?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 7 #"movcell"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"cellInList?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"possibleCells"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 14 3 7 #"movcell"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; WorldState cell id -> Worldstate"
0 0 24 29 1 #"\n"
0 0 17 3 59
#"; moves the player with the respective id to the given cell"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"movePlayer"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"moveOK?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 7 #"make-ws"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"changeCell"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 17 #"ws-current-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #") ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #") ("
0 0 14 3 10 #"ws-special"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 2 #"ws"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; cell id -> number"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; returns the distance (without walls) from the cell"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; to the goal area of the player. A cell on the"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; finish line has the return value 0"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; 1: to Bottom"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; 3: to Top"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; 2: to Right"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; 4: to Left"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"directDistance"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; (list cell) (list cell) -> (list cell)"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; combines two lists of cells, so that only unique cells remain"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"combineCellLists"
0 0 24 3 1 #" "
0 0 14 3 2 #"xa"
0 0 24 3 1 #" "
0 0 14 3 2 #"xb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 2 #"xa"
0 0 24 3 2 #") "
0 0 14 3 2 #"xb"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 2 #"xb"
0 0 24 3 2 #") "
0 0 14 3 2 #"xa"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"cellInList?"
0 0 24 3 1 #" "
0 0 14 3 2 #"xb"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"xa"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"combineCellLists"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"xa"
0 0 24 3 2 #") "
0 0 14 3 2 #"xb"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 16 #"combineCellLists"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"xa"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 2 #"xb"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"xa"
0 0 24 3 6 #"))))])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; (list cell) cell -> (list cell)"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; removes a cell from a list"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"removeCellFromList"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 24 3 2 #" ("
0 0 14 3 6 #"negate"
0 0 24 3 1 #" "
0 0 14 3 6 #"cell=?"
0 0 24 3 2 #") "
0 0 14 3 4 #"cell"
0 0 24 3 2 #") "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; Worldstate id -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; returns false if a certain player can'r reach its goal line"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"wayNotBlocked?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 10 #"candidates"
0 0 24 3 1 #" "
0 0 14 3 18 #"checked-candidates"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 10 #"candidates"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 7 #"current"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 10 #"candidates"
0 0 24 3 1 #" "
0 0 23 3 5 #"#:key"
0 0 24 3 2 #" ("
0 0 14 3 6 #"curryr"
0 0 24 3 1 #" "
0 0 14 3 14 #"directDistance"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #") "
0 0 14 3 1 #"<"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 24 #"candidates-minus-current"
0 0 24 3 2 #" ("
0 0 14 3 18 #"removeCellFromList"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #" "
0 0 14 3 10 #"candidates"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 9 #"new-state"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"movePlayer"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 14 #"pos-candidates"
0 0 24 3 2 #" ("
0 0 14 3 13 #"possibleCells"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-state"
0 0 24 3 2 #") "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-state"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 14 #"new-candidates"
0 0 24 3 2 #" ("
0 0 14 3 7 #"remove*"
0 0 24 3 1 #" "
0 0 14 3 18 #"checked-candidates"
0 0 24 3 1 #" "
0 0 14 3 14 #"pos-candidates"
0 0 24 3 1 #" "
0 0 14 3 6 #"cell=?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 22 #"new-checked-candidates"
0 0 24 3 2 #" ("
0 0 14 3 16 #"combineCellLists"
0 0 24 3 1 #" "
0 0 14 3 18 #"checked-candidates"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 15 #"next-candidates"
0 0 24 3 2 #" ("
0 0 14 3 16 #"combineCellLists"
0 0 24 3 1 #" "
0 0 14 3 24 #"candidates-minus-current"
0 0 24 3 1 #" "
0 0 14 3 14 #"new-candidates"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 14 #"directDistance"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"#t"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"wayNotBlocked?"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-state"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 15 #"next-candidates"
0 0 24 3 1 #" "
0 0 14 3 22 #"new-checked-candidates"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"  )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; WorldState -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 95
(40
 #"; returns false if there is not at list one way every player in this "
 #"configuration to reach the"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #"; finish area of the respective player. "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"validConfig?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 7 #"Players"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 36 #"; check if all ways are clear:      "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 14 #"wayNotBlocked?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"player_pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"Players"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 14 #"wayNotBlocked?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"player_pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"Players"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")) "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 14 #"wayNotBlocked?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"player_pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"Players"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")) "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 14 #"wayNotBlocked?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"player_pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"Players"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 39 #"; check if amounts of walls is correct:"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX_WALLS"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")) "
0 0 17 3 13 #"; build walls"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 22 #"player-remaining-walls"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 6 #"))))) "
0 0 17 3 30 #"; remaining-walls from players"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"  )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; posn number number -> posn"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; create a new posn from offsets of an old-one"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"offset-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"deltax"
0 0 24 3 1 #" "
0 0 14 3 6 #"deltay"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"posn"
0 0 24 3 2 #") "
0 0 14 3 6 #"deltax"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"posn"
0 0 24 3 2 #") "
0 0 14 3 6 #"deltay"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";  ######                                                     "
0 0 24 29 1 #"\n"
0 0 17 3 62
#";  #     # ###### #    # #####  ###### #####  # #    #  ####  "
0 0 24 29 1 #"\n"
0 0 17 3 62
#";  #     # #      ##   # #    # #      #    # # ##   # #    # "
0 0 24 29 1 #"\n"
0 0 17 3 62
#";  ######  #####  # #  # #    # #####  #    # # # #  # #      "
0 0 24 29 1 #"\n"
0 0 17 3 62
#";  #   #   #      #  # # #    # #      #####  # #  # # #  ### "
0 0 24 29 1 #"\n"
0 0 17 3 62
#";  #    #  #      #   ## #    # #      #   #  # #   ## #    # "
0 0 24 29 1 #"\n"
0 0 17 3 62
#";  #     # ###### #    # #####  ###### #    # # #    #  ####  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; size of tiles in pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"WALL_HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"GAP_SIZE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"PLAYER_SHADOW_X"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"PLAYER_SHADOW_Y"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"BACKGROUND_COLOR"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"makeTile"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 11 #"stroke_size"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 10 #"inner_size"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 1 #" "
0 0 14 3 8 #"GAP_SIZE"
0 0 24 3 1 #" "
0 0 14 3 11 #"stroke_size"
0 0 24 3 3 #" )]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"overlay/pinhole"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"center-pinhole"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 10 #"inner_size"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 8 #"make-pen"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 11 #"stroke_size"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"round\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"round\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"center-pinhole"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 10 #"inner_size"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"center-pinhole"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 16 #"BACKGROUND_COLOR"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"TILE"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"makeTile"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"POS_MOVE"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"makeTile"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Alice Blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"FIN_MOVE"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"makeTile"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Pale Green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"playerform"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"center-pinhole"
0 0 24 3 2 #" ("
0 0 14 3 22 #"pulled-regular-polygon"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/2"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"playertoken_prefab"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 5 #"width"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 8 #"GAP_SIZE"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 8 #"unscaled"
0 0 24 3 2 #" ("
0 0 14 3 14 #"center-pinhole"
0 0 24 3 2 #" ("
0 0 14 3 10 #"playerform"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             ])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"scale/xy"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"width"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 8 #"unscaled"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"width"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 8 #"unscaled"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 8 #"unscaled"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"   )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"PLAYER1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 1 #"("
0 0 14 3 18 #"playertoken_prefab"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"PLAYER2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 18 #"playertoken_prefab"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"PLAYER3"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"-90"
0 0 24 3 2 #" ("
0 0 14 3 18 #"playertoken_prefab"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"PLAYER4"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 2 #" ("
0 0 14 3 18 #"playertoken_prefab"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"WALL_VERT"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"WALL_HORZ"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 14 3 9 #"WALL_VERT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"WALL_VERT_DENIED"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"WALL_HORZ_DENIED"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 14 3 16 #"WALL_VERT_DENIED"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"MOVE_DENIED"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Misty Rose\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"-45"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Misty Rose\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"MOVE_OK"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 2 #" ("
0 0 14 3 12 #"beside/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"bottom\""
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Light Green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.8"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Light Green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"           )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 73
(41
 #";; gives back a Square with BOARD_SIZE x BOARD_SIZE elements of type "
 #"TYLE"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"render-empty-board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 5 #"above"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 4 #"TILE"
0 0 24 3 3 #") ("
0 0 14 3 5 #"range"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 5 #"range"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; id -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; renders the finish area for a player with the respective id"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; onto another image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"render-finish"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 11 #"vert_finish"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 8 #"FIN_MOVE"
0 0 24 3 3 #") ("
0 0 14 3 5 #"range"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 11 #"horz_finish"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 8 #"FIN_MOVE"
0 0 24 3 3 #") ("
0 0 14 3 5 #"range"
0 0 24 3 1 #" "
0 0 14 3 10 #"BOARD_SIZE"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 11 #"anchor_cell"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               )]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 11 #"finish_line"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 11 #"horz_finish"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 14 3 11 #"vert_finish"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                )]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"overlay/xy"
0 0 24 3 1 #" "
0 0 14 3 11 #"finish_line"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cell->NWCorner-x"
0 0 24 3 1 #" "
0 0 14 3 11 #"anchor_cell"
0 0 24 3 3 #") ("
0 0 14 3 16 #"cell->NWCorner-y"
0 0 24 3 1 #" "
0 0 14 3 11 #"anchor_cell"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; Player Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 74
(42
 #";; Renders a player with the correct player-token and the correct pos"
 #"ition"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #";; on an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"render-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cell->NWCorner"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-cell"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cell->NWCorner"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-cell"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 5 #"token"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-token"
0 0 24 3 2 #" ("
0 0 14 3 9 #"player-id"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #") ("
0 0 14 3 22 #"player-remaining-walls"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"token"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 4 #"TILE"
0 0 24 3 3 #") ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 5 #"token"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 4 #"TILE"
0 0 24 3 3 #") ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 5 #"token"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"image"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; id, remaining-walls -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; renders the player token and the number of remaining walls"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-token"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 15 #"remaining-walls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 5 #"token"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 7 #"PLAYER1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 7 #"PLAYER2"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 7 #"PLAYER3"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 7 #"PLAYER4"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 )]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 15 #"overlay/pinhole"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 15 #"remaining-walls"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 5 #"token"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"   )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; PlayersList Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; lays all players found in the players list onto another image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"render-players"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 7 #"compose"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 13 #"render-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 7 #"players"
0 0 24 3 3 #")) "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; Player Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; Renders a wall with correct position and orientation"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; on an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-wall"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cell->NWCorner"
0 0 24 3 2 #" ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cell->NWCorner"
0 0 24 3 2 #" ("
0 0 14 3 9 #"wall-cell"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"wall-orientation"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"overlay/xy"
0 0 24 3 1 #" "
0 0 14 3 9 #"WALL_VERT"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                              "
0 0 14 3 1 #"y"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                              "
0 0 14 3 5 #"image"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"wall-orientation"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"overlay/xy"
0 0 24 3 1 #" "
0 0 14 3 9 #"WALL_HORZ"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                                "
0 0 14 3 1 #"x"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                                "
0 0 14 3 5 #"image"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 2 #" ("
0 0 14 3 16 #"wall-orientation"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 10 #"\"vertical\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"raise"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 27 #"\"faulty wall orientation: \""
0 0 24 3 2 #" ("
0 0 14 3 16 #"wall-orientation"
0 0 24 3 1 #" "
0 0 14 3 4 #"wall"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; WallsList, Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; lays all walls found in the walls list onto another image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-walls"
0 0 24 3 1 #" "
0 0 14 3 5 #"walls"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 7 #"compose"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 11 #"render-wall"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 5 #"walls"
0 0 24 3 3 #")) "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; Player Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 74 42 0 0 24 29 1 #"\n"
0 0 17 3 14 #";; on an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-move"
0 0 24 3 1 #" "
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cell->NWCorner"
0 0 24 3 1 #" "
0 0 14 3 4 #"move"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cell->NWCorner"
0 0 24 3 1 #" "
0 0 14 3 4 #"move"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 8 #"POS_MOVE"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"image"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; Special Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 74
(43
 #";; Renders a special image with the correct frame and the correct pos"
 #"ition"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #";; on an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"render-special"
0 0 24 3 1 #" "
0 0 14 3 7 #"special"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"special"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"image"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"special-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"special"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"special-y"
0 0 24 3 1 #" "
0 0 14 3 7 #"special"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 3 #"img"
0 0 24 3 2 #" ("
0 0 14 3 11 #"special-img"
0 0 24 3 1 #" "
0 0 14 3 7 #"special"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 3 #"img"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 5 #"image"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; WallsList, Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; lays all walls found in the walls list onto another image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"render-pos-moves"
0 0 24 3 1 #" "
0 0 14 3 5 #"moves"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 7 #"compose"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 11 #"render-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 5 #"moves"
0 0 24 3 3 #")) "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; WorldState -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 75
(44
 #";; this is the rendering function for the state, where the player is "
 #"active"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"render-active-game"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (("
0 0 14 3 7 #"compose"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 14 #"render-special"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-special"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 12 #"render-walls"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 14 #"render-players"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 16 #"render-pos-moves"
0 0 24 3 2 #" ("
0 0 14 3 13 #"possibleCells"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #") ("
0 0 14 3 17 #"ws-current-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 14 3 2 #"ws"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 13 #"render-finish"
0 0 24 3 2 #" ("
0 0 14 3 17 #"ws-current-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 18 #"render-empty-board"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; WorldState -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; this is the rendering function for the main-menu"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"render-main-menu"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"press 's' to start game\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #") "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Quoridor\""
0 0 24 3 1 #" "
0 0 21 3 2 #"36"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 18 #"render-empty-board"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 18 #"render-empty-board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                          )))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; WorldState -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; layers all render functions for the final game-board"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-state"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 19 3 13 #"\"active-game\""
0 0 24 3 3 #") ("
0 0 14 3 18 #"render-active-game"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 19 3 11 #"\"main-menu\""
0 0 24 3 3 #") ("
0 0 14 3 16 #"render-main-menu"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(45
 #";  ###                                                               "
 #" "
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(46
 #";   #  #    # ##### ###### #####    ##    ####  ##### #  ####  #    #"
 #" "
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(47
 #";   #  ##   #   #   #      #    #  #  #  #    #   #   # #    # ##   #"
 #" "
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(48
 #";   #  # #  #   #   #####  #    # #    # #        #   # #    # # #  #"
 #" "
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(49
 #";   #  #  # #   #   #      #####  ###### #        #   # #    # #  # #"
 #" "
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(50
 #";   #  #   ##   #   #      #   #  #    # #    #   #   # #    # #   ##"
 #" "
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(51
 #";  ### #    #   #   ###### #    # #    #  ####    #   #  ####  #    #"
 #" "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; WorldState Integer Integer MouseEvent -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 74
(52
 #";; Test function to check interaction. Moves second player to clicked"
 #" cell"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mouse-action"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"gs"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 2 #"cp"
0 0 24 3 2 #" ("
0 0 14 3 17 #"ws-current-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 12 #"clicked-cell"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 12 #"clicked-area"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"area"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 12 #"clicked-area"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 7 #"players"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ws-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 17 #"ws-current-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"active-game\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"area"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 10 #"movePlayer"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"area"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"h-edge\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 7 #"addWall"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"area"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"v-edge\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 7 #"addWall"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #"])]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"move\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"area"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 3 24 #")                       "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 13 #"changeSpecial"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 12 #"make-special"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cell->NWCorner-x"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 16 #"cell->NWCorner-y"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cellInList?"
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                         ("
0 0 14 3 13 #"possibleCells"
0 0 24 3 1 #" "
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                        "
0 0 14 3 7 #"MOVE_OK"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                        "
0 0 14 3 11 #"empty-image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                        "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"area"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"h-edge\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 13 #"changeSpecial"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 12 #"make-special"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cell->NWCorner-x"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                      [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cell->NWCorner-y"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                    "
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                      [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-y"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 3 #")) "
0 0 14 3 11 #"empty-image"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                      [("
0 0 14 3 7 #"wallOK?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                 "
0 0 14 3 7 #"players"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                 "
0 0 14 3 12 #"clicked-cell"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                 "
0 0 19 3 12 #"\"horizontal\""
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                 "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 14 3 9 #"WALL_HORZ"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 16 #"WALL_HORZ_DENIED"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                        "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"area"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"v-edge\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 13 #"changeSpecial"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 12 #"make-special"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                      [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cell->NWCorner-x"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 14 #"WALL_THICKNESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 17 #"))])             "
0 0 24 3 26 #"                          "
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 16 #"cell->NWCorner-y"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                      [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cell-x"
0 0 24 3 1 #" "
0 0 14 3 12 #"clicked-cell"
0 0 24 3 3 #")) "
0 0 14 3 11 #"empty-image"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                      [("
0 0 14 3 7 #"wallOK?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ws-walls"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                 "
0 0 14 3 7 #"players"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                 "
0 0 14 3 12 #"clicked-cell"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                 "
0 0 19 3 10 #"\"vertical\""
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                 "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 14 3 9 #"WALL_VERT"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 16 #"WALL_VERT_DENIED"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                        "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #"])]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               )]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; WorldState key-event -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 74 52 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"key-press"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 19 3 11 #"\"main-menu\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 15 #"changeGameState"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"active-game\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 19 3 13 #"\"active-game\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 19 #"changeCurrentPlayer"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 19 3 13 #"\"active-game\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 19 #"changeCurrentPlayer"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 19 3 13 #"\"active-game\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 19 #"changeCurrentPlayer"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ws-gamestate"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 19 3 13 #"\"active-game\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 19 #"changeCurrentPlayer"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; number number -> (list Area, cell)"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; returns the Area that was clicked, according to this"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; scheme:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; ."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"clicked-area"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 5 #"rel-x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 5 #"rel-y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 7 #"epsilon"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 7 #"limit-l"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 1 #" "
0 0 14 3 7 #"epsilon"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 7 #"limit-r"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 7 #"epsilon"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 7 #"limit-o"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 1 #" "
0 0 14 3 7 #"epsilon"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 7 #"limit-u"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 7 #"epsilon"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 10 #"; top edge"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-l"
0 0 24 3 1 #" "
0 0 14 3 5 #"rel-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-r"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 5 #"rel-y"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-o"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"h-edge\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"mouseXY->Cell"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 11 #"; left edge"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 5 #"rel-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-l"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-o"
0 0 24 3 1 #" "
0 0 14 3 5 #"rel-y"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-u"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"v-edge\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"mouseXY->Cell"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 8 #"; center"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-l"
0 0 24 3 1 #" "
0 0 14 3 5 #"rel-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-r"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-o"
0 0 24 3 1 #" "
0 0 14 3 5 #"rel-y"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-u"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"mouseXY->Cell"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 13 #"; bottom edge"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-l"
0 0 24 3 1 #" "
0 0 14 3 5 #"rel-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-r"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-u"
0 0 24 3 1 #" "
0 0 14 3 5 #"rel-y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"h-edge\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"mouseXY->Cell"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 12 #"; right edge"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-r"
0 0 24 3 1 #" "
0 0 14 3 5 #"rel-x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-o"
0 0 24 3 1 #" "
0 0 14 3 5 #"rel-y"
0 0 24 3 1 #" "
0 0 14 3 7 #"limit-u"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"v-edge\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"mouseXY->Cell"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE_SIZE"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 9 #"; corners"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"none\""
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; WorldState Message -> WorldState"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"receive"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"changeGameState"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 54 #"; #     #                                             "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 54 #"; #     # #    # # #    # ###### #####   ####  ###### "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 54 #"; #     # ##   # # #    # #      #    # #      #      "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 54 #"; #     # # #  # # #    # #####  #    #  ####  #####  "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 54 #"; #     # #  # # # #    # #      #####       # #      "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 54 #"; #     # #   ## #  #  #  #      #   #  #    # #      "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 53 #";  #####  #    # #   ##   ###### #    #  ####  ######"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";ausgabe spielfeld im fenster"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 12 #"render-state"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 8 #"on-mouse"
0 0 24 3 1 #" "
0 0 14 3 12 #"mouse-action"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 9 #"key-press"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 8 #"register"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOCALHOST"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 10 #"on-receive"
0 0 24 3 1 #" "
0 0 14 3 7 #"receive"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";  ####### #######  #####  ####### ### #     #  #####  "
0 0 24 29 1 #"\n"
0 0 17 3 55 #";     #    #       #     #    #     #  ##    # #     # "
0 0 24 29 1 #"\n"
0 0 17 3 55 #";     #    #       #          #     #  # #   # #       "
0 0 24 29 1 #"\n"
0 0 17 3 55 #";     #    #####    #####     #     #  #  #  # #  #### "
0 0 24 29 1 #"\n"
0 0 17 3 55 #";     #    #             #    #     #  #   # # #     # "
0 0 24 29 1 #"\n"
0 0 17 3 55 #";     #    #       #     #    #     #  #    ## #     # "
0 0 24 29 1 #"\n"
0 0 17 3 55 #";     #    #######  #####     #    ### #     #  #####  "
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; a test configuration"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; with a list of two players like in gamestate 2:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; ."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"test-players"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"test-walls"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; let's say it's the turn of player 1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"test-ws"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ws"
0 0 24 3 1 #" "
0 0 14 3 12 #"test-players"
0 0 24 3 1 #" "
0 0 14 3 10 #"test-walls"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"main-menu\""
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-game-4"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-ws"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 13 #"\"active-game\""
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"almost-won-2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-ws"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 )"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 13 #"\"active-game\""
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"player-1-blocked"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-ws"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"horizontal\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-wall"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cell"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"vertical\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 )"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 13 #"\"active-game\""
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-game-4"
0 0 24 3 1 #")"
0           0
